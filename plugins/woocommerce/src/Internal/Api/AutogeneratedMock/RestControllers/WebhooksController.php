<?php

namespace Automattic\WooCommerce\Internal\Api\AutogeneratedMock\RestControllers;

use Automattic\WooCommerce\Api\Webhooks;
use Automattic\WooCommerce\Internal\Api\AutogeneratedMock\GraphQLTypes\CreateWebhookInputType;
use Automattic\WooCommerce\Internal\RestApiControllerBase;
use Automattic\WooCommerce\Internal\Traits\AccessiblePrivateMethods;

class WebhooksController extends RestApiControllerBase {
	use AccessiblePrivateMethods;

	protected string $route_namespace = 'wc/v4/rest';

	protected function get_rest_api_namespace(): string {
		return 'rest';
	}

	public function register_routes() {
		register_rest_route(
			$this->route_namespace,
			'/webhook',
			array(
				array(
					'methods'             => \WP_REST_Server::READABLE,
					'callback'            => fn( $request ) => $this->run( $request, 'run_webhook' ),
					'permission_callback' => '__return_true',
					'args'                => array(
						'id' => array(
							'description' => __( 'Unique identifier of the webhook.', 'woocommerce' ),
							'type'        => 'integer',
							'context'     => array( 'view', 'edit' ),
							'readonly'    => true,
						),
					),
					// TODO: schema
				),
			)
		);

		register_rest_route(
			$this->route_namespace,
			'/create_webhook',
			array(
				array(
					'methods'             => \WP_REST_Server::CREATABLE,
					'callback'            => fn( $request ) => $this->run( $request, 'create_webhook' ),
					'permission_callback' => '__return_true',
					'args'                => array(
						'input' => array(
							'description' => __( 'Data for creating the webhook.', 'woocommerce' ),
							'type'        => 'object',
							'context'     => array( 'view', 'edit' ),
							'readonly'    => true,
							'properties'  => array(
								'id'   => array(
									'type' => 'integer',
								),
								'name' => array(
									'type' => 'string',
								),
							),
						),
					),
				),
			)
		);
	}

	public function run_webhook( \WP_REST_Request $request ) {
		return wc_get_container()->get( Webhooks::class )->get_webhook( $request['id'] );
	}

	public function create_webhook( \WP_REST_Request $request ) {
		$input        = $request['input'];
		$input_object = CreateWebhookInputType::parse( $input );
		return wc_get_container()->get( Webhooks::class )->create_webhook( $input_object );
	}
}
